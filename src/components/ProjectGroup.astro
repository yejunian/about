---
import type { Props as ProjectProps } from "@/components/Project.astro";

import Project from "@/components/Project.astro";

interface ProjectItem extends Omit<ProjectProps, "index"> {
  descriptions?: string[];
}

const projects: ProjectItem[] = [
  {
    title: "Codeplay",
    keywords: ["협업", "풀스택"],
    environment: [
      "TypeScript",
      "Express",
      "MariaDB",
      "JWT",
      "Vite",
      "React",
      "Zustand",
      "Tailwind CSS",
    ],
    descriptions: [
      "협업에 익숙해지기",
      "다양한 역할에서 협업해 보기",
      "OAuth, UI 컴포넌트 추출, 처음 보는 라이브러리 다양하게 활용하기",
    ],
  },
  {
    title: "개인 블로그",
    keywords: ["SSG 프레임워크"],
    environment: [
      "GitHub Pages",
      "GitHub Actions",
      "TypeScript",
      "Gatsby",
      "SCSS",
      "CSS Modules",
    ],
    descriptions: [
      "내가 원하는 기능이 담긴 블로그 만들기",
      "블로그 코어와 게시글 레포 분리: 커밋 로그 분리 + 블로그 공사·이전에 대비",
    ],
  },
  {
    title: "img-seq-pack",
    keywords: ["일상 문제 해결", "코드 스플리팅"],
    environment: ["GitHub Pages", "TypeScript", "Vite"],
    descriptions: [
      "페이지 초기 로드를 줄이기 위하여 이미지 처리 ~ pdf 생성 코드를 동적 임포트하여 코드 스플리팅 적용 (jsPDF가 무거웠음)",
      "Canvas API로 뽑아낸 png 압축률이 유독 안 좋아서 별도 라이브러리 사용",
    ],
  },
  {
    title: "MD Presenter",
    keywords: ["Hands-on", "Markdown 처리"],
    environment: ["Tauri", "Next.js", "unified / remark / rehype"],
    descriptions: [
      "한 md 파일을 여러 페이지에 나누어 표시하기 위해서 Markdown 처리 파이프라인을 직접 구성함 (unified 플러그인 연결)",
      // "사실 Next.js 안 쓰고 Vite로 MPA를 만들어도 됐음",
      // "앱 사이즈는 Electron보다 작게 나오지만, 크로스 브라우징 문제를 감당해야 함",
    ],
  },
];
---

<div class="project">
  <h2>프로젝트</h2>

  {
    projects.map((item, index) => (
      <Project
        index={index}
        title={item.title}
        keywords={item.keywords}
        environment={item.environment}
      >
        {item.descriptions?.map((desc) => (
          <p>{desc}</p>
        ))}
      </Project>
    ))
  }
</div>

<style>
  .project {
    grid-row: var(--grid-row-skillset) / var(--grid-row-education);
    grid-column: var(--grid-column-projects) / -1;

    display: grid;
    /* grid-template-columns: repeat(3, 1fr); */
    grid-template-columns: 3fr 3fr 4fr;
    grid-template-rows: min-content auto auto;
    gap: 16px 24px;
  }

  h2 {
    grid-row: 1;
    grid-column: 1 / -1;
  }
</style>
